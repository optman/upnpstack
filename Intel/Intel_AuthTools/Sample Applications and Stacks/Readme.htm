<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Intel</title>
<style>
<!--
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body>

<h1>Disclaimers</h1>
<p><font size="2">INTEL CORPORATION MAKES NO WARRANTY OF ANY KIND WITH REGARD TO 
THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. INTEL CORPORATION ASSUMES 
NO RESPONSIBILITY FOR ANY ERRORS THAT MAY APPEAR IN THIS DOCUMENT. INTEL 
CORPORATION MAKES NO COMMITMENT TO UPDATE NOR TO KEEP CURRENT THE INFORMATION 
CONTAINED IN THIS DOCUMENT. THIS SPECIFICATION IS COPYRIGHTED BY AND SHALL 
REMAIN THE PROPERTY OF INTEL CORPORATION. NO LICENSE, EXPRESS OR IMPLIED, BY 
ESTOPPEL OR OTHERWISE TO ANY INTELLECTUAL PROPERTY RIGHTS IS GRANTED HEREIN. 
INTEL DISCLAIMS ALL LIABILITY, INCLUDING LIABILITY FOR INFRINGEMENT OF ANY 
PROPRIETARY RIGHTS, RELATING TO IMPLEMENTATION OF INFORMATION IN THIS 
SPECIFICATION. INTEL DOES NOT WARRANT OR REPRESENT THAT SUCH IMPLEMENTATIONS 
WILL NOT INFRINGE SUCH RIGHTS. NO PART OF THIS DOCUMENT MAY BE COPIED OR 
REPRODUCED IN ANY FORM OR BY ANY MEANS WITHOUT PRIOR WRITTEN CONSENT OF INTEL 
CORPORATION. INTEL CORPORATION RETAINS THE RIGHT TO MAKE CHANGES TO THESE 
SPECIFICATIONS AT ANY TIME, WITHOUT NOTICE. </font></p>
<p><font size="2">Legal Notices Intel software products are copyrighted by and 
shall remain the property of Intel Corporation. Use, duplication or disclosure 
is subject to restrictions stated in Intel's Software License Agreement, or in 
the case of software delivered to the government, in accordance with the 
software license agreement as defined in FAR 52.227-7013. </font></p>
<p><font size="2">The Intel logo is a registered trademark of Intel Corporation.</font></p>
<p><font size="2">Other brands and names are the property of their respective 
owners.</font></p>

<p><font size="2">Intel copyright 2003.</font></p>

<h1><b><font size="3">Intel Authoring Tools for UPnP Technologies<br>
</font>Sample Applications &amp; Stacks</b></h1>

<p>This package is provided as-is, without support and without any guaranties. It 
is not an official Intel product, so please don't call Intel support. We 
appreciate feedback on the embedded tools and included source code, especially in relation to interoperability 
issues.</p>

<p>The Intel Embedded tools package include a wide array of devices and control 
point source code that can be used to quickly build UPnP solutions. Instead of 
using a generic UPnP stack, or building one yourself, this package includes UPnP 
code samples for Windows and Linux that can be re-used on any project, including 
embedded projects.</p>

<p>Please provide feedback &amp; bug reports to:
<a href="mailto:ylian.saint-hilaire@intel.com">ylian.saint-hilaire@intel.com</a> 
or <a href="mailto:bryan.y.roe@intel.com">bryan.y.roe@intel.com</a> or
<a href="mailto:nelson.kidd@intel.com">nelson.kidd@intel.com</a>.</p>

<p><b><font size="5">Licensing</font></b></p>

<p>To license source code and/or technology contained this package, please contact:
<a href="mailto:ylian.saint-hilaire@intel.com">ylian.saint-hilaire@intel.com</a> 
or <a href="mailto:jim.edwards@intel.com">jim.edwards@intel.com</a>.  </p>

<p><b><font size="4">Sample Application - Intel Device Scanner</font><br>
<font size="2">(Located in the &quot;Device Scanner&quot; directory)</font></b></p>
<p>An example of Microsoft Windows and Microsoft PocketPC control point 
applications built using an Intel Micro Control Point stack implement. This 
sample application uses the same look-and-feel as Intel Device Spy, but 
currently only includes discovery of devices and services..</p>
<p>&nbsp;&nbsp;&nbsp; Intel Device Scanner, Microsoft Windows (x86) - 
164k<br>
&nbsp;&nbsp;&nbsp; Intel Device Scanner, Microsoft PocketPC (arm) - 56k</p>
<p>&nbsp;</p>
<p><b><font size="4">Sample Application - Light Bulb Device</font><br>
<font size="2">(Located in the &quot;Light Bulb Device&quot; directory)</font></b></p>
<p>A quick example of Microsoft Windows and Microsoft PocketPC applications 
built using an Intel Micro stack implement for light bulb. This sample 
application is a great example of the Micro Stack's small size.</p>
<p>&nbsp;&nbsp;&nbsp; Light Bulb Device, Microsoft Windows (x86) - 76k<br>
&nbsp;&nbsp;&nbsp; Light Bulb Device, Microsoft PocketPC (arm) - 45k</p>
<p>&nbsp;</p>
<p><b><font size="4">Sample Application - Micro Media Browser</font><br>
<font size="2">(Located in the &quot;Micro Media Browser&quot; directory)</font></b></p>
<p>Intel Micro Media Browser object code and source code for Windows and 
PocketPC uses the Micro Media Server Control Point stack (MMSCP) to allow 
Windows and PocketPC devices to browse the content from discovered Media Servers 
on the network.</p>
<p>&nbsp;&nbsp;&nbsp; Micro Media Browser, Microsoft Windows (x86) - 84k<br>
&nbsp;&nbsp;&nbsp; Micro Media Browser, Microsoft PocketPC (arm) - 68k</p>
<p>&nbsp;</p>
<p><b><font size="4">Sample Application - Micro Media Renderer</font><br>
<font size="2">(Located in the &quot;Micro Media Renderer&quot; directory)</font></b></p>
<p>Intel Micro Media Renderer object code and source code for Windows, POSIX and PocketPC. 
Two Micro Media Server applications are provided: Win32 and PocketPC and a 
simple sample is provided for POSIX. All three make 
use of the Intel Micro Media Renderer library, which is written in C. The Intel 
Micro Media Renderer library makes use of the Intel Micro Stack, which has been 
custom built to implement an AV Content Directory device.</p>
<p>&nbsp;&nbsp;&nbsp; Micro Media Renderer, Microsoft Windows (x86) - 145k<br>
&nbsp;&nbsp;&nbsp; Micro Media Renderer, Microsoft PocketPC (arm) - 75k</p>
<p>Directory Details</p>
<blockquote>
  <div class="Section1" style="width: 820; height: 197">
    <p class="MsoNormal"><font face="Arial" size="2">
    <span style="FONT-SIZE: 10pt; FONT-FAMILY: Arial"><b>PocketPC_MmrRslMp</b>: 
    PocketPC application with a complete state machine for M3U playlists. 
    Streaming engine provided by windows media player. Useful as a demo endpoint 
    when prototyping.</span></font></p>
    <p class="MsoNormal"><font face="Arial" size="2">
    <span style="FONT-SIZE: 10pt; FONT-FAMILY: Arial"><b>Posix_Mmr</b>: Posix 
    console media renderer without any state logic. Useful for vendors that 
    already have a complete media renderer and just want UPnP AV 
    interfaces/support.</span></font></p>
    <p class="MsoNormal"><font face="Arial" size="2">
    <span style="FONT-SIZE: 10pt; FONT-FAMILY: Arial"><b>Posix_MmrRslEc</b>: 
    Posix console media renderer with a complete state machine for M3U playlists. 
    Provides emulated streaming engine. Useful for vendors that only have a 
    streaming framework and want UPnP AV features.</span></font></p>
    <p class="MsoNormal"><font face="Arial" size="2">
    <span style="FONT-SIZE: 10pt; FONT-FAMILY: Arial"><b>Win32_Mmr</b>: Win32 
    console media renderer without any state logic. Useful for vendors that want 
    a win32 app to step through when integrating Posix_Mmr with a product.</span></font></p>
    <p class="MsoNormal"><font face="Arial" size="2">
    <span style="FONT-SIZE: 10pt; FONT-FAMILY: Arial"><b>Win32_MmrRslEc</b>: 
    Win32 console media renderer with a complete state machine for M3U playlists. 
    Provides emulated streaming engine. Useful for vendors that only have 
    windows streaming framework and want UPnP AV features.&nbsp;</span></font></p>
    <p class="MsoNormal"><font face="Arial" size="2">
    <span style="FONT-SIZE: 10pt; FONT-FAMILY: Arial"><b>Win32_MmrRslMp</b>: 
    Win32 windowed application with a complete state machine for M3U playlists. 
    Streaming engine provided by windows media player. Useful as a demo endpoint 
    when prototyping.</span></font></div>
</blockquote>
<p>NOTE: When running on PocketPC the &quot;Embedded Windows Media Player for Pocket 
PC&quot; is required for the Micro Media Renderer to run on a handheld device. The 
component can the downloaded at:
<a href="http://www.microsoft.com/windows/windowsmedia/create/embedppc.aspx">
http://www.microsoft.com/windows/windowsmedia/create/embedppc.aspx</a>. This 
will allow the Micro Media Renderer to play both audio and video media files.</p>
<p>&nbsp;</p>

<p><b><font size="4">Sample Application - Micro Media Server</font><br>
<font size="2">(Located in the &quot;Micro Media Server&quot; directory)</font></b></p>

<p>Intel Micro Media Server object code and source code for Windows and PocketPC. 
Two Micro Media Server applications are provided: Win32 and PocketPC. Both make 
use of the Intel Micro Media Server library, which is written in C. The Intel 
Micro Media Server library makes use of the Intel Micro Stack, which has been 
custom built to implement an AV Content Directory device.</p>
<p>Additional instructions included in the &quot;Micro Media Server/Readme.htm&quot;</p>
<p>&nbsp;&nbsp;&nbsp; Micro Media Server, Microsoft Windows (x86) - 152k<br>
&nbsp;&nbsp;&nbsp; Micro Media Server, Microsoft PocketPC (arm) - 75k</p>
<p>&nbsp;</p>

<p><b><font size="4">Sample Application - MicroDMR</font><br>
<font size="2">(Located in the &quot;MicroDMR&quot; directory)</font></b></p>

<p>Intel MicroDMR or Micro Digital Media Renderer, is a light weight AV Renderer 
and Remote I/O combo stack. It is a example of a stack that would be used by a 
Digital Media Adapter device, such as a Network-to-Television adapter. In this 
sample, runtime size is kept to a minimum by running a combo stack there both AV 
Renderer and Remote I/O run as embedded devices of a single root device and 
running all of the UPnP functionality on a single thread..</p>
<p>&nbsp;</p>

<p><b><font size="4">Sample Application - Remote IO Client</font><br>
<font size="2">(Located in the &quot;Rmeote IO Client&quot; directory)</font></b></p>

<p>Intel Remote IO Client sample application allows Remote IO Servers to remote 
a user interface onto the client's display. The Remote IO client on PocketPC is 
fully functioning, the POSIX and &quot;Windows Simple&quot; versions are console 
application that allow developers to quickly build UPnP Client functionality 
into existing devices.</p>
<p>&nbsp;</p>

<p><b><font size="4">Sample Application - Remote IO Control</font><br>
<font size="2">(Located in the &quot;Rmeote IO Control&quot; directory)</font></b></p>

<p>Intel Remote IO Control sample application discovers Remote IO Clients on the 
network, for each client the list of available &quot;channels&quot; and allows the user to 
switch the channel by double clicking on a channel.</p>

<p>&nbsp;</p>

<p><b><font size="4">Sample Application - Remote IO Server</font><br>
<font size="2">(Located in the &quot;Rmeote IO Server&quot; directory)</font></b></p>

<p>Intel Remote IO Server sample application discovers Remote IO Clients on the 
network and offers a remoted application. In the sample application, the user 
interface will display fill boxes easy time a key is pressed.</p>

</body>

</html>